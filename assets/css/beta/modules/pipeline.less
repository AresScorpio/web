.pipeline-grid {
  .parallel-grid {
    display: flex;
    flex-direction: column;
    // border: 1px solid red;
    flex-grow: 1;
    justify-content: flex-start;
    align-items: flex-start;
  }

  .parallel-grid > .input {
    align-self: flex-end;
  }

  .serial-grid {
    display: flex;
    flex-direction: row;
  }

  .serial-grid > .input {
    align-self: flex-start;
  }
}

.pipeline-content {
  display: flex;

  .pipeline-grid {
    margin: auto;
    display: flex;
    height: ~"calc(100vh - 103px)";
    justify-content: space-evenly;

    * {
      box-sizing: border-box;
    }

    .node {
      display: flex; /* this does interesting but maybe good things? */
      flex-grow: 1;
      margin: 5px 20px;
      font-size: 10px;
      min-height: 60px;

      a {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: inline-block;
        padding: 0;
      }
    }

    .output {
      color: @base0E !important;
    }

    .pipeline-table {
      padding: 20px;
      border-spacing: 0;

      tr {
        vertical-align: top;
      }

      td {
        padding: 0;
      }
    }

    .spacer {
      height: 30px;
    }

    .space-parallel-grid {
      display: flex;
      flex-direction: column;
    }

    .job a {
      font-size: 12px;
      font-family: iosevka;
      letter-spacing: 0.1em;
    }

    .output {
      flex-grow: 1;
    }

    .combination-container {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      height: 100%;
    }

    .job-combination {
      flex-grow: 1;
      margin: 4px;
      min-height: 20px;
      position: relative;
      outline: 0;

      &.inactive {
        opacity: 0.1;
      }

      &.no-builds {
        background: lightgray;
      }

      &.failed {
        .striped-background(@red-secondary, @red-primary);
        border: 2px solid @red-primary;
      }

      &.no-builds.started {
        .running-animation(@base02, @base01);
        border: 2px solid @base03;
      }

      &.succeeded.started {
        .running-animation(@green-primary, @green-secondary);
        border: 2px solid @green-primary;
      }

      &.failed.started {
        .running-animation(@red-primary, @red-secondary);
        border: 2px solid @red-primary;
      }

      &.aborted.started {
        .running-animation(@brown-primary, @brown-secondary);
        border: 2px solid @brown-primary;
      }

      &.errored.started {
        .running-animation(@amber-primary, @amber-secondary);
        border: 2px solid @amber-primary;
      }

      &.paused.started {
        .running-animation(@blue-primary, @blue-secondary);
        border: 2px solid @blue-primary;
      }
    }

    .job-combination-resources {
      position: absolute;
      top: 0;
      right: 0;
      width: 0;
      height: 0;
      border-top: 30px solid black;
      border-left: 30px solid transparent;
      opacity: 0.6;
    }

    .job-combination-resources:focus {
       outline: none;
       opacity: 1;
     }

    .job-combination-resources:focus + .job-combination-details {
      display: block;
    }

    .job-combination-details {
      pointer-events: auto;
      position: absolute;
      left: 100%;
      padding: 0 5px;
      z-index: 1;
      display: none;
      background-color: black;
      width: max-content;
    }

    .job-combination-inputs, .job-combination-outputs {
      margin: 0;

      li {
        list-style: none;
        margin: 5px;
        cursor: pointer;

        &:hover {
          filter: brightness(1.3);
        }

        .fa {
          margin-right: 10px;
        }

        .description, .fa {
          visibility: hidden;
        }
      }

      li:first-of-type {
        .description, .fa {
          visibility: visible;
        }
      }
    }

    .job-combination-input, .job-combination-output {
      .name {
        margin-left: 40px;
      }

      .trigger {
        position: absolute;
        left: 37px;
        margin-top: 2px;
        display: inline-block;
        width: 9px;
        height: 10px;
        background-image: url('images/ic_resource_trigger.svg');
        background-color: inherit;
        background-size: contain;
      }

      &.paused {
        background: @blue-primary !important;
      }

      &.errored {
        background: @amber-primary !important;
      }
    }

    .job-combination-inputs {
      background: black;
      color: white;

      li:nth-of-type(even) {
        background: #232323;
      }
    }

    .job-combination-outputs {
      background: white;
      color: black;

      li:nth-of-type(even) {
        background: #F4F4F4;
      }
    }

    .job {
      flex-grow: 1;
      min-width: 160px;
      border-width: 1px;
      border-color: gray;
      border-style: solid;

      display: flex;
      flex-direction: column;

      .job-name {
        flex-grow: 0;
        display: block;
        line-height: 14px;
        padding: 10px;
        color: @white;
        background: @base01;
        font-weight: normal;
      }

      .job-status {
        flex-grow: 1;
        display: block;
      }

      &.failed .job-status {
        .striped-background(@red-secondary, @red-primary);
        border: 2px solid @red-primary;
      }

      &.no-builds.started .job-status {
        .running-animation(@base02, @base01);
        border: 2px solid @base03;
      }

      &.succeeded.started .job-status {
        .running-animation(@green-primary, @green-secondary);
        border: 2px solid @green-primary;
      }

      &.failed.started .job-status {
        .running-animation(@red-primary, @red-secondary);
        border: 2px solid @red-primary;
      }

      &.aborted.started .job-status {
        .running-animation(@brown-primary, @brown-secondary);
        border: 2px solid @brown-primary;
      }

      &.errored.started .job-status {
        .running-animation(@amber-primary, @amber-secondary);
        border: 2px solid @amber-primary;
      }

      &.paused.started .job-status {
        .running-animation(@blue-primary, @blue-secondary);
        border: 2px solid @blue-primary;
      }
    }

    .input {
      text-align: right;
      min-width: 30px;
    }

    .input.constrained {
      align-self: stretch;
      text-align: left;
      min-width: 30px;

      a {
        padding-left: 10px;
        color: @base04;
      }
    }
  }

  .resources {
    background: @base00;
    color: @white;
    line-height: 30px;
    margin-top: 2px;
    overflow-y: auto;
    height: ~"calc(100vh - 42px)";

    .resource {
      padding: 5px 20px;

      .resource-name {
        font-weight: bold;
      }

      .resource-space {
        padding-left: 20px;
      }

      .space-mouseover:hover {
        background: lightgray;
        color: black;
      }
    }
  }
}

@keyframes pipeline-running {
  0%   {  background-position-x: (-53.5px) }
  100% {  background-position-x: 0px }
}

.running-animation(@color1, @color2) {
  .striped-background(@color2, @color1);
  animation: pipeline-running 3s linear infinite;
}

.striped-background(@color1, @color2) {
  background-image: repeating-linear-gradient(-115deg, @color1 0, @color1 10px, @color2 0, @color2 16px);
  background-size: (53px * 2) (57px * 2);
}
